# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: todo.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='todo.proto',
  package='todo',
  syntax='proto3',
  serialized_pb=_b('\n\ntodo.proto\x12\x04todo\"\x0e\n\x0cUsersRequest\"/\n\x04User\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\r\n\x05\x65mail\x18\x03 \x01(\t\"&\n\tUsersList\x12\x19\n\x05users\x18\x01 \x03(\x0b\x32\n.todo.User\"\x95\x01\n\x04Todo\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0f\n\x07user_id\x18\x02 \x01(\x03\x12\x0c\n\x04text\x18\x03 \x01(\t\x12!\n\x06status\x18\x04 \x01(\x0e\x32\x11.todo.Todo.Status\"?\n\x06Status\x12\x12\n\x0eUNKNOWN_STATUS\x10\x00\x12\x07\n\x03NEW\x10\x01\x12\x0e\n\nINPROGRESS\x10\x02\x12\x08\n\x04\x44ONE\x10\x03\"&\n\tTodosList\x12\x19\n\x05todos\x18\x01 \x03(\x0b\x32\n.todo.Todo2\x89\x02\n\x0bTodoService\x12\x31\n\x08GetUsers\x12\x12.todo.UsersRequest\x1a\x0f.todo.UsersList\"\x00\x12#\n\x07GetUser\x12\n.todo.User\x1a\n.todo.User\"\x00\x12-\n\x0cGetUserTodos\x12\n.todo.User\x1a\x0f.todo.TodosList\"\x00\x12#\n\x07GetTodo\x12\n.todo.Todo\x1a\n.todo.Todo\"\x00\x12&\n\nCreateTodo\x12\n.todo.Todo\x1a\n.todo.Todo\"\x00\x12&\n\nCreateUser\x12\n.todo.User\x1a\n.todo.User\"\x00\x42\x02H\x01\x62\x06proto3')
)



_TODO_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='todo.Todo.Status',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN_STATUS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NEW', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPROGRESS', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DONE', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=212,
  serialized_end=275,
)
_sym_db.RegisterEnumDescriptor(_TODO_STATUS)


_USERSREQUEST = _descriptor.Descriptor(
  name='UsersRequest',
  full_name='todo.UsersRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20,
  serialized_end=34,
)


_USER = _descriptor.Descriptor(
  name='User',
  full_name='todo.User',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='todo.User.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='todo.User.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='email', full_name='todo.User.email', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=36,
  serialized_end=83,
)


_USERSLIST = _descriptor.Descriptor(
  name='UsersList',
  full_name='todo.UsersList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='users', full_name='todo.UsersList.users', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=85,
  serialized_end=123,
)


_TODO = _descriptor.Descriptor(
  name='Todo',
  full_name='todo.Todo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='todo.Todo.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='user_id', full_name='todo.Todo.user_id', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='text', full_name='todo.Todo.text', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='todo.Todo.status', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _TODO_STATUS,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=126,
  serialized_end=275,
)


_TODOSLIST = _descriptor.Descriptor(
  name='TodosList',
  full_name='todo.TodosList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='todos', full_name='todo.TodosList.todos', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=277,
  serialized_end=315,
)

_USERSLIST.fields_by_name['users'].message_type = _USER
_TODO.fields_by_name['status'].enum_type = _TODO_STATUS
_TODO_STATUS.containing_type = _TODO
_TODOSLIST.fields_by_name['todos'].message_type = _TODO
DESCRIPTOR.message_types_by_name['UsersRequest'] = _USERSREQUEST
DESCRIPTOR.message_types_by_name['User'] = _USER
DESCRIPTOR.message_types_by_name['UsersList'] = _USERSLIST
DESCRIPTOR.message_types_by_name['Todo'] = _TODO
DESCRIPTOR.message_types_by_name['TodosList'] = _TODOSLIST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

UsersRequest = _reflection.GeneratedProtocolMessageType('UsersRequest', (_message.Message,), dict(
  DESCRIPTOR = _USERSREQUEST,
  __module__ = 'todo_pb2'
  # @@protoc_insertion_point(class_scope:todo.UsersRequest)
  ))
_sym_db.RegisterMessage(UsersRequest)

User = _reflection.GeneratedProtocolMessageType('User', (_message.Message,), dict(
  DESCRIPTOR = _USER,
  __module__ = 'todo_pb2'
  # @@protoc_insertion_point(class_scope:todo.User)
  ))
_sym_db.RegisterMessage(User)

UsersList = _reflection.GeneratedProtocolMessageType('UsersList', (_message.Message,), dict(
  DESCRIPTOR = _USERSLIST,
  __module__ = 'todo_pb2'
  # @@protoc_insertion_point(class_scope:todo.UsersList)
  ))
_sym_db.RegisterMessage(UsersList)

Todo = _reflection.GeneratedProtocolMessageType('Todo', (_message.Message,), dict(
  DESCRIPTOR = _TODO,
  __module__ = 'todo_pb2'
  # @@protoc_insertion_point(class_scope:todo.Todo)
  ))
_sym_db.RegisterMessage(Todo)

TodosList = _reflection.GeneratedProtocolMessageType('TodosList', (_message.Message,), dict(
  DESCRIPTOR = _TODOSLIST,
  __module__ = 'todo_pb2'
  # @@protoc_insertion_point(class_scope:todo.TodosList)
  ))
_sym_db.RegisterMessage(TodosList)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('H\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class TodoServiceStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetUsers = channel.unary_unary(
          '/todo.TodoService/GetUsers',
          request_serializer=UsersRequest.SerializeToString,
          response_deserializer=UsersList.FromString,
          )
      self.GetUser = channel.unary_unary(
          '/todo.TodoService/GetUser',
          request_serializer=User.SerializeToString,
          response_deserializer=User.FromString,
          )
      self.GetUserTodos = channel.unary_unary(
          '/todo.TodoService/GetUserTodos',
          request_serializer=User.SerializeToString,
          response_deserializer=TodosList.FromString,
          )
      self.GetTodo = channel.unary_unary(
          '/todo.TodoService/GetTodo',
          request_serializer=Todo.SerializeToString,
          response_deserializer=Todo.FromString,
          )
      self.CreateTodo = channel.unary_unary(
          '/todo.TodoService/CreateTodo',
          request_serializer=Todo.SerializeToString,
          response_deserializer=Todo.FromString,
          )
      self.CreateUser = channel.unary_unary(
          '/todo.TodoService/CreateUser',
          request_serializer=User.SerializeToString,
          response_deserializer=User.FromString,
          )


  class TodoServiceServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetUsers(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetUserTodos(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetTodo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CreateTodo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CreateUser(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_TodoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetUsers': grpc.unary_unary_rpc_method_handler(
            servicer.GetUsers,
            request_deserializer=UsersRequest.FromString,
            response_serializer=UsersList.SerializeToString,
        ),
        'GetUser': grpc.unary_unary_rpc_method_handler(
            servicer.GetUser,
            request_deserializer=User.FromString,
            response_serializer=User.SerializeToString,
        ),
        'GetUserTodos': grpc.unary_unary_rpc_method_handler(
            servicer.GetUserTodos,
            request_deserializer=User.FromString,
            response_serializer=TodosList.SerializeToString,
        ),
        'GetTodo': grpc.unary_unary_rpc_method_handler(
            servicer.GetTodo,
            request_deserializer=Todo.FromString,
            response_serializer=Todo.SerializeToString,
        ),
        'CreateTodo': grpc.unary_unary_rpc_method_handler(
            servicer.CreateTodo,
            request_deserializer=Todo.FromString,
            response_serializer=Todo.SerializeToString,
        ),
        'CreateUser': grpc.unary_unary_rpc_method_handler(
            servicer.CreateUser,
            request_deserializer=User.FromString,
            response_serializer=User.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'todo.TodoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaTodoServiceServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetUsers(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetUser(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetUserTodos(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetTodo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CreateTodo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CreateUser(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaTodoServiceStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetUsers(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetUsers.future = None
    def GetUser(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetUser.future = None
    def GetUserTodos(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetUserTodos.future = None
    def GetTodo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetTodo.future = None
    def CreateTodo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CreateTodo.future = None
    def CreateUser(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CreateUser.future = None


  def beta_create_TodoService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('todo.TodoService', 'CreateTodo'): Todo.FromString,
      ('todo.TodoService', 'CreateUser'): User.FromString,
      ('todo.TodoService', 'GetTodo'): Todo.FromString,
      ('todo.TodoService', 'GetUser'): User.FromString,
      ('todo.TodoService', 'GetUserTodos'): User.FromString,
      ('todo.TodoService', 'GetUsers'): UsersRequest.FromString,
    }
    response_serializers = {
      ('todo.TodoService', 'CreateTodo'): Todo.SerializeToString,
      ('todo.TodoService', 'CreateUser'): User.SerializeToString,
      ('todo.TodoService', 'GetTodo'): Todo.SerializeToString,
      ('todo.TodoService', 'GetUser'): User.SerializeToString,
      ('todo.TodoService', 'GetUserTodos'): TodosList.SerializeToString,
      ('todo.TodoService', 'GetUsers'): UsersList.SerializeToString,
    }
    method_implementations = {
      ('todo.TodoService', 'CreateTodo'): face_utilities.unary_unary_inline(servicer.CreateTodo),
      ('todo.TodoService', 'CreateUser'): face_utilities.unary_unary_inline(servicer.CreateUser),
      ('todo.TodoService', 'GetTodo'): face_utilities.unary_unary_inline(servicer.GetTodo),
      ('todo.TodoService', 'GetUser'): face_utilities.unary_unary_inline(servicer.GetUser),
      ('todo.TodoService', 'GetUserTodos'): face_utilities.unary_unary_inline(servicer.GetUserTodos),
      ('todo.TodoService', 'GetUsers'): face_utilities.unary_unary_inline(servicer.GetUsers),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_TodoService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('todo.TodoService', 'CreateTodo'): Todo.SerializeToString,
      ('todo.TodoService', 'CreateUser'): User.SerializeToString,
      ('todo.TodoService', 'GetTodo'): Todo.SerializeToString,
      ('todo.TodoService', 'GetUser'): User.SerializeToString,
      ('todo.TodoService', 'GetUserTodos'): User.SerializeToString,
      ('todo.TodoService', 'GetUsers'): UsersRequest.SerializeToString,
    }
    response_deserializers = {
      ('todo.TodoService', 'CreateTodo'): Todo.FromString,
      ('todo.TodoService', 'CreateUser'): User.FromString,
      ('todo.TodoService', 'GetTodo'): Todo.FromString,
      ('todo.TodoService', 'GetUser'): User.FromString,
      ('todo.TodoService', 'GetUserTodos'): TodosList.FromString,
      ('todo.TodoService', 'GetUsers'): UsersList.FromString,
    }
    cardinalities = {
      'CreateTodo': cardinality.Cardinality.UNARY_UNARY,
      'CreateUser': cardinality.Cardinality.UNARY_UNARY,
      'GetTodo': cardinality.Cardinality.UNARY_UNARY,
      'GetUser': cardinality.Cardinality.UNARY_UNARY,
      'GetUserTodos': cardinality.Cardinality.UNARY_UNARY,
      'GetUsers': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'todo.TodoService', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
